{"version":3,"sources":["images/Capture.PNG","images/Capture2.PNG","components/complex_card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleBlur","e","target","value","length","alert","handleBlurr","s","Date","actualyear","parseInt","getFullYear","toString","slice","state","cardnumber","name","validthru","checkname","bind","assertThisInitialized","checkcardnumber","checkvalidthru","checknamelength","y","setState","trim","replace","toLocaleUpperCase","a","x","goststate","z","gostvalidthru","d","year","concat","_this2","react_default","createElement","className","type","onChange","event","onBlur","alt","src","Logo1","repeat","Logo2","React","Component","App","complex_card","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e4d9207.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Capture.95bfbd13.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Capture2.e00780ab.PNG\";","import React  from 'react';\r\nimport Logo1 from '../images/Capture.PNG';\r\nimport Logo2 from '../images/Capture2.PNG';\r\n\r\nclass Card extends React.Component {\r\n constructor(props) {\r\n   super(props)\r\n   this.state = {cardnumber:\"\" , name : \"\" , validthru: \"\"}\r\n   this.checkname = this.checkname.bind(this) \r\n   this.checkcardnumber = this.checkcardnumber.bind(this) \r\n   this.checkvalidthru = this.checkvalidthru.bind(this)\r\n   this.checknamelength =  this.checknamelength.bind(this) \r\n \r\n  }\r\n \r\n\r\ncheckname (y) {\r\n\r\n  this.setState({name:y.trim().replace(/[^a-zA-Z]/g, \"\").toLocaleUpperCase()})\r\n}\r\n\r\n\r\nchecknamelength (a) {\r\nif (a.length > 20) {\r\n\r\nalert (\"The name has a maximum length of 20 characters\")\r\n}\r\nelse return a\r\n}\r\n\r\n\r\ncheckcardnumber (x) { \r\n\r\n  this.goststate= x.trim().replace(/\\D/g , \"\").slice(0,16)\r\n  this.setState({cardnumber:this.goststate.toString().replace(/\\B(?=(\\d{4})+(?!\\d))/g, \" \")})\r\n \r\n}\r\n  \r\n\r\ncheckvalidthru (z) {\r\n\r\n   this.gostvalidthru= z.trim().replace(/\\D/g, \"\").slice(0,4)\r\n   var d = new Date ()\r\n   var year = parseInt(d.getFullYear().toString().slice(2))+5\r\n\r\n  if (this.gostvalidthru.length>1 ){\r\n      if (this.gostvalidthru.toString().slice(0,2) > 12  ) alert (\"Enter a Valid Month\")\r\n   }\r\n  \r\n   if (this.gostvalidthru.length>2 ){\r\n      if (this.gostvalidthru.toString().slice(2) > year ) alert (\"Enter a Valid Year\")\r\n   }\r\n\r\n   this.setState({validthru:this.gostvalidthru.toString().slice(0,2).concat(\"/\",this.gostvalidthru.toString().slice(2) )})\r\n   \r\n}\r\nhandleBlur = e => {\r\n   if(e.target.value.length !==19){\r\n      alert (\"The card number has a length of 16 characters\")\r\n   }\r\n}\r\n\r\n\r\nhandleBlurr = e => {\r\n   var s = new Date ()\r\n   var actualyear = parseInt(s.getFullYear().toString().slice(2))\r\n   if (e.target.value.toString().slice(3) <= actualyear ){\r\n      alert (\"Enter a Valid Year\")\r\n   }\r\n}\r\n\r\n\r\n render() {\r\n \r\n    return ( <div className=\"maincontainer\">\r\n\r\n    <div className=\"unserinput\">\r\n         <p> Enter Card Number: </p> <input type=\"text\" value ={this.state.cardnumber}  onChange={(event)=> this.checkcardnumber(event.target.value)} onBlur={this.handleBlur}     />\r\n         <p> Enter Card Holder Name: </p> <input type=\"text\" value ={this.state.name} onChange={(event)=> this.checkname( event.target.value)}/>\r\n         <p> Enter the validThru : </p> <input type=\"text\"  value ={this.state.validthru}  onChange={(event)=> this.checkvalidthru(event.target.value)} onBlur={this.handleBlurr}/>\r\n         \r\n    </div>\r\n \r\n    <div className=\"maincard\" >\r\n            <h1> CREDIT CARD</h1>\r\n            <img className= \"logo1\" alt=\"photo1\" src={Logo1} />\r\n            <div className=\"information\" >\r\n                  <div className=\"informationuser\">\r\n                      <p className=\"number1\"> {this.state.cardnumber.concat((this.state.cardnumber.length)<16 ?'*'.repeat(16-(this.state.cardnumber.length)):\"\")} </p>\r\n                        <div className=\"check\">\r\n                           <p className=\"number2\"> 5422 </p>\r\n                                <div className=\"valid\">     \r\n                                   <p> VALID THRU </p>\r\n                                   <div className=\"month\"> \r\n                                       <p> MONTH/YEAR </p>\r\n                                       <h5> {this.state.validthru}</h5>\r\n                                   </div>  \r\n                                </div> \r\n                        </div>\r\n                      <p className=\"holder\"> {this.checknamelength(this.state.name)}</p>\r\n                   </div> \r\n                  <img className=\"logo2\" alt=\"photo2\" src={Logo2} />    \r\n             </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n );\r\n}\r\n }\r\n\r\n\r\n export default Card ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './components/complex_card' ;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n            <Card/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}